----------------------------------------------------------------------------------------------
Nodejs : is a JS runtime. 

----------------------------------------------------------------------------------------------
**create a file from a page by runing it : node server.js
const fs = require('fs');

fs.writeFileSync('hello.txt', 'Hello from Node.js');
----------------------------------------------------------------------------------------------
JS Summary : 
Weakly Typed Language : 
    No explicit type assignment
    Data Types can be switched dynamically
Object-Oriented Language : 
    Data can be organized in logical objects
    Primitive and reference Types
Versatule Language: 
    Runs in browser & directly on a PC/server
    Can perform a broad variety of tasks.
----------------------------------------------------------------------------------------------
template literals : `Another way of writing strings`

With that syntax, you can dynamically add data into a string like this:
console.log(`My name is ${name} and I am ${age} years old.`);
----------------------------------------------------------------------------------------------
Program lifecycle and Event Loop : 
* Node.js runs non-blocking JS code and uses an event-driven code ("Event Loop") for running your logic.
* A node program exits as soon as there is no more work to do.
* NOTE : The createServer() event never finishes by default.
----------------------------------------------------------------------------------------------
Nodejs and core Modules : 
* Node.js ships with multiple core modules (http, fs, path, ....)
* Core modules can be imported into any file to be used there.
* Import file to be used there.
* Import via require('module')
----------------------------------------------------------------------------------------------
The Node Module System : 
* Import via require('./path-to-file') for custom files or require('module) for core and third-party modules    
* Export via module.exports or just exports (for multiple exports)
----------------------------------------------------------------------------------------------
Asynchronous Code : 
* JS code is non-blocking* Use callbacks and events => Order changes
----------------------------------------------------------------------------------------------
Request and Responses : 
* Parse request data in chunks (Streams and Buffers)
* Avoid "double responses"
----------------------------------------------------------------------------------------------
https://nodejs.org/en/docs/guides/event-loop-timers-and-nexttick/
----------------------------------------------------------------------------------------------
https://nodejs.org/en/docs/guides/dont-block-the-event-loop/
----------------------------------------------------------------------------------------------
Express js all about middleware.
----------------------------------------------------------------------------------------------
What is Express.js? : 
* Express.js is Node.js framework - a ackage that adds a bunch of utility functions and 
  tools and a clear set of rules on how the app should be built (middleware).
* It's highly extensible and other packages can be plugged into it (middleware)
----------------------------------------------------------------------------------------------
Routing : 
* You can filter request by path and method.
* If you filter by method, paths are matched exactly, otherwise, the first segment of a URL is matched.
* You can use the express. Router to split your routes across files elegantly.
----------------------------------------------------------------------------------------------
Middleware, next() and rest()
* Express.js relies heavily on middleware functions - you can easily add them by calling use()
* Middleware functions handle a request and should call next() to forward the request to the next 
function in line or send a response.
----------------------------------------------------------------------------------------------
Server Files 
* You're not limited to server dummy text as a response.
You can sendFile()s to your users - e.g. HTML files
* If a request is directly made for a file (e.g. a .css file is requested), 
you can enable static serving for such files via express.static()
----------------------------------------------------------------------------------------------
Available Templetting Engines:
EJS     : <p><%= name %></p>        : Use normal HTML and plain Javascript in your templates.
Pug (Jade)  : p #{name}     : Use minimal HTML and custom template language.
Handlebars  : <p>{{ name }}</p>     : Use normal HTML and custom template language.
----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

